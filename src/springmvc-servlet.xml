<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd 
                           http://www.springframework.org/schema/mvc 
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"> 
   
       <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->
       <mvc:annotation-driven/>
       
       <!-- 启动包扫描功能，以便注册带有 @Controller、@Service、@repository、@Component 、等注解的类成为spring的bean --> 
       <context:component-scan base-package="com.javatzxx.android">
      		<!-- 将 带有 @Service注解的类,交由spring 父容器实例化,[ @Service实例依赖@Repository实例，故spring父容器也会装配
      		<span style="font-family: Arial, Helvetica, sans-serif;">@Repository 实例</span><span style="font-family: Arial, Helvetica, sans-serif;">]</span>  -->
       		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/> 
       </context:component-scan>



        
       <!-- 完成请求和注解POJO的映射 --> 
       <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
       
       <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 --> 
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" > 
            <property name="prefix" value="/" /> 
            <property name="suffix" value=".jsp" /> 
       </bean> 
       
       
<!-- 	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
		<list>
			<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
 		</list>
		</property>
	</bean> -->

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>  
  
       
       <!-- 自定义拦截器,拦截请求
       <mvc:interceptors>
       		<mvc:interceptor> 
       			<mvc:mapping path="/user/*" />  
      			<bean class="com.javatzxx.android.interceptor.LoginInterceptor" /> 
       		</mvc:interceptor>
       </mvc:interceptors> 
        --> 
       <!-- 对静态资源文件的访问 --> 
       <mvc:resources mapping="/js/**" location="/js/" /> 
       
       <!-- 设置文件上传内容 -->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
            <property name="defaultEncoding" value="UTF-8"></property> 
            <property name="maxUploadSize" value="10485760000"></property> 
            <property name="maxInMemorySize" value="40960"></property> 
       </bean> 
</beans>